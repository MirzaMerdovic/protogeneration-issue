// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ContractBeta.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Contracts.Grpc.Beta {

  /// <summary>Holder for reflection information generated from ContractBeta.proto</summary>
  public static partial class ContractBetaReflection {

    #region Descriptor
    /// <summary>File descriptor for ContractBeta.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContractBetaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJDb250cmFjdEJldGEucHJvdG8SE2NvbnRyYWN0cy5ncnBjLmJldGEaE0Nv",
            "bnRyYWN0QWxwaGEucHJvdG8iIwoVR2V0TGlua2VkQWxwaGFSZXF1ZXN0EgoK",
            "AmlkGAEgASgFIlAKFkdldExpbmtlZEFscGhhUmVzcG9uc2USNgoLTGlua2Vk",
            "QWxwaGEYASABKAsyIS5jb250cmFjdHMuZ3JwYy5hbHBoYS5BbHBoYU9iamVj",
            "dDJ6CgtCZXRhU2VydmljZRJrCg5HZXRMaW5rZWRBbHBoYRIqLmNvbnRyYWN0",
            "cy5ncnBjLmJldGEuR2V0TGlua2VkQWxwaGFSZXF1ZXN0GisuY29udHJhY3Rz",
            "LmdycGMuYmV0YS5HZXRMaW5rZWRBbHBoYVJlc3BvbnNlIgBCFqoCE0NvbnRy",
            "YWN0cy5HcnBjLkJldGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Contracts.Grpc.Alpha.ContractAlphaReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Contracts.Grpc.Beta.GetLinkedAlphaRequest), global::Contracts.Grpc.Beta.GetLinkedAlphaRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Contracts.Grpc.Beta.GetLinkedAlphaResponse), global::Contracts.Grpc.Beta.GetLinkedAlphaResponse.Parser, new[]{ "LinkedAlpha" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetLinkedAlphaRequest : pb::IMessage<GetLinkedAlphaRequest> {
    private static readonly pb::MessageParser<GetLinkedAlphaRequest> _parser = new pb::MessageParser<GetLinkedAlphaRequest>(() => new GetLinkedAlphaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLinkedAlphaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Contracts.Grpc.Beta.ContractBetaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLinkedAlphaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLinkedAlphaRequest(GetLinkedAlphaRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLinkedAlphaRequest Clone() {
      return new GetLinkedAlphaRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLinkedAlphaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLinkedAlphaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLinkedAlphaRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLinkedAlphaResponse : pb::IMessage<GetLinkedAlphaResponse> {
    private static readonly pb::MessageParser<GetLinkedAlphaResponse> _parser = new pb::MessageParser<GetLinkedAlphaResponse>(() => new GetLinkedAlphaResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLinkedAlphaResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Contracts.Grpc.Beta.ContractBetaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLinkedAlphaResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLinkedAlphaResponse(GetLinkedAlphaResponse other) : this() {
      LinkedAlpha = other.linkedAlpha_ != null ? other.LinkedAlpha.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLinkedAlphaResponse Clone() {
      return new GetLinkedAlphaResponse(this);
    }

    /// <summary>Field number for the "LinkedAlpha" field.</summary>
    public const int LinkedAlphaFieldNumber = 1;
    private global::Contracts.Grpc.Alpha.AlphaObject linkedAlpha_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Contracts.Grpc.Alpha.AlphaObject LinkedAlpha {
      get { return linkedAlpha_; }
      set {
        linkedAlpha_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLinkedAlphaResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLinkedAlphaResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LinkedAlpha, other.LinkedAlpha)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (linkedAlpha_ != null) hash ^= LinkedAlpha.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (linkedAlpha_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LinkedAlpha);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (linkedAlpha_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinkedAlpha);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLinkedAlphaResponse other) {
      if (other == null) {
        return;
      }
      if (other.linkedAlpha_ != null) {
        if (linkedAlpha_ == null) {
          linkedAlpha_ = new global::Contracts.Grpc.Alpha.AlphaObject();
        }
        LinkedAlpha.MergeFrom(other.LinkedAlpha);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (linkedAlpha_ == null) {
              linkedAlpha_ = new global::Contracts.Grpc.Alpha.AlphaObject();
            }
            input.ReadMessage(linkedAlpha_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
